version: '3.8'

services:

  client:
    container_name: react
    build:
      context: ../client
      dockerfile: Dockerfile
    image: client
    ports: 
      - 3000:3000
    networks:
      - postgres
    depends_on:
      - postgres
      - server
    restart: unless-stopped

  server:
    container_name: express_server
    build:
      context: ../server
      dockerfile: Dockerfile
    image: server
    env_file:
      - ../server/.env.sample
    ports: 
      - 8080:8080
    networks:
      - postgres
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${PGDATA}
    volumes:
      - postgres:${PGDATA}
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
